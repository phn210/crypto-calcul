
# Directories
SHELL := pwsh
.SHELLFLAGS := -NoProfile -Command
BASE_NAME = $(shell basename $$pwd)
BIN_DIR = ../../../build/$(BASE_NAME)
INC_DIR = ..
OBJ_PARENT_DIR = ../../../obj
OBJ_DIR = $(OBJ_PARENT_DIR)/$(BASE_NAME)

# Compiler and flags
CC = gcc
CFLAGS = -I$(INC_DIR) $(if $(strip $(TEST_DEPS)), \
	$(shell echo $(TEST_DEPS) | awk '{for(i=1;i<=NF;i++){split($$i, a, "/"); printf "../"a[1]" "}}' | xargs -n1 | sort -u | sed 's/^/-I/' | xargs), \
) -DWINDOWS_H -Wall -Wextra

LDFLAGS = -lgmp

# Source files
SRCS = $(shell (Get-ChildItem -Path . -Recurse -Filter "*.c" | ForEach-Object { $$_.Name }))
TEST_SRCS = $(filter %.test.c, $(SRCS))
OBJS = $(SRCS:%.c=%.o)
TESTS = $(TEST_SRCS:%.c=%)
DEP_PATHS = $(TEST_DEPS:%.o=$(OBJ_PARENT_DIR)/%.o)
OBJ_PATHS = $(OBJS:%=$(OBJ_DIR)/%)
TEST_PATHS = $(TESTS:%=$(BIN_DIR)/%)
NON_TEST_OBJ_PATHS = $(filter-out %.test.o, $(OBJ_PATHS))

all: $(TEST_PATHS)

# Create executables for test files
$(BIN_DIR)/%: $(OBJ_PATHS) $(DEP_PATHS) | $(BIN_DIR)
	$(CC) -o $@  $(OBJ_DIR)/$(notdir $@).o $(NON_TEST_OBJ_PATHS) $(DEP_PATHS) $(LDFLAGS)

# Compile dependencies
$(DEP_PATHS):
	@cd ../$(shell basename $(dir $@)) && make $@ -f Makefile.win

# Compile source files to object files
$(OBJ_DIR)/%.o: %.c | $(OBJ_DIR)
	@mkdir $(dir $@) -Force | Out-Null
	$(CC) $(CFLAGS) -c $< -o $@

# Create directories if they don't exist
$(OBJ_DIR):
	@mkdir $(OBJ_DIR) -Force | Out-Null

$(BIN_DIR):
	@mkdir $(BIN_DIR) -Force | Out-Null

test: $(TEST_PATHS)
	@foreach ($$test in "$(TESTS)".split(" ")) { <#\
		#>if (Test-Path "$(BIN_DIR)/$$test") { <#\
			#>Start-Process -FilePath "$(BIN_DIR)/$$test" -Wait -NoNewWindow <#\
		#>} <#\
	#>}

clean:
	@if (Test-Path "$(OBJ_DIR)") { <#\
		#>rm $(OBJ_DIR) -Recurse <#\
	#>}
	@if (Test-Path "$(BIN_DIR)") { <#\
		#>rm $(BIN_DIR) -Recurse <#\
	#>}

.PHONY : all clean test
.PRECIOUS: $(OBJ_DIR)/%.o